{"version":3,"sources":["services/Context.js","config/index.js","services/GetTokenFromURL.js","components/Logo.jsx","components/NavBar.jsx","components/VideoDetails.jsx","components/VideoItem.jsx","components/VideoContainer.jsx","components/BrowserItem.jsx","components/BrowserBar.jsx","components/User.jsx","components/MainContent.jsx","components/Player.jsx","pages/Home.js","pages/Login.js","routes/routes.js","index.js"],"names":["Context","React","createContext","UserContext","children","useState","userContext","setUserContext","Provider","value","config","endpoint","redirect","scopes","clientId","process","CLI_ID","clientSecret","CLI_SECRET","clientPremiumToken","CLI_PREMIUM_TOKEN","loginUrl","join","Logo","className","theme","media","srcSet","src","alt","spotify","SpotifyWebApi","NavBar","useContext","navRef","useRef","useEffect","handleSetMusic","token","section","gender","getMyRecentlyPlayedTracks","limit","then","playlist","currentSection","currentData","getMyTopArtists","artist","getMySavedAlbums","albums","getMyTopTracks","tracks","getMySavedTracks","searchAlbums","album","ref","onClick","console","log","current","VideoDetails","detailsData","title","caption","image","extra","handleGetCurrentData","data","base1","items","track","name","artists","images","url","release_date","uri","base2","genres","followers","total","base3","base4","base5","base6","handleSetCurrentTrack","currentTrack","VideoItem","VideoContainer","map","item","played_at","id","BrowserItem","BrowserBar","searchItems","setSearchItems","searchRef","onBlur","setTimeout","type","placeholder","maxLength","onChange","e","stopPropagation","target","searchTracks","res","User","user","length","display_name","MainContent","Player","tracksUri","playState","uris","play","initialVolume","magnifySliderOnHover","styles","activeColor","bgColor","color","height","loaderColor","sliderColor","sliderHandleColor","trackArtistColor","trackNameColor","Home","setTracks","setPlayState","firstLoad","setFirstLoad","window","location","hash","substring","split","reduce","initial","parts","decodeURIComponent","access_token","setAccessToken","getMe","href","getInitialTrack","initialTrack","Login","Routes","basename","origin","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64535a15.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst Context = React.createContext({})\r\n\r\nexport function UserContext ({ children }) {\r\n  const [userContext, setUserContext] = useState([])\r\n\r\n  return (\r\n    <Context.Provider value={{ userContext, setUserContext }}>\r\n      {children}\r\n    </Context.Provider>\r\n  )\r\n}\r\n\r\nexport default Context\r\n","const config = {\r\n  endpoint: 'https://accounts.spotify.com/authorize',\r\n  redirect: 'https://lukway-developer.github.io/Foxbel/',\r\n  scopes: [\r\n    'user-read-currently-playing',\r\n    'user-read-recently-played',\r\n    'user-read-playback-state',\r\n    'user-read-email',\r\n    'user-read-private',\r\n    'user-modify-playback-state',\r\n    'user-top-read',\r\n    'user-library-read',\r\n    'streaming'\r\n  ],\r\n  clientId: process.env.CLI_ID || 'f4c7bb5cbfcb490a8a518ca2847482d6',\r\n  clientSecret: process.env.CLI_SECRET || '171d59dd8e6543c29ff8f76646f039c3',\r\n  clientPremiumToken: process.env.CLI_PREMIUM_TOKEN || 'BQCh88UsCvUvmfvEQUhziOGyHDoQ2NHD4TespjY69Y5SBWs4jJHPMKFysVIZOingUp27yr6pAPmOJGxisnfgm2MuXyXWbKfJiC-Eyz7o2X8AElkjCyPWCwSI_wDBS8RiPoiRt0AuqYRFwXFpNl8GXwGDH_RN16aSk-bk'\r\n}\r\n\r\nexport default config\r\n","import config from '../config/index'\r\n\r\nexport const loginUrl = `${config.endpoint}?client_id=${config.clientId}&redirect_uri=${config.redirect}&scope=${config.scopes.join('%20')}&response_type=token&show_dialog=true`\r\n\r\nexport const getTokenFromURL = () => {\r\n  return window.location.hash\r\n    .substring(1)\r\n    .split('&')\r\n    .reduce((initial, item) => {\r\n      const parts = item.split('=')\r\n      initial[parts[0]] = decodeURIComponent(parts[1])\r\n      return initial\r\n    }, {})\r\n}\r\n","/* eslint-disable react/jsx-indent */\r\nconst Logo = ({ className, theme }) => {\r\n  return (\r\n    <picture>\r\n      {\r\n      // Selection between normal or white logo\r\n      theme === 'normal'\r\n        ? <>\r\n            <source media='(min-width: 1024px)' srcSet='./images/foxbel-music.png' />\r\n            <source media='(max-width: 768px)' srcSet='./images/foxbel-music@2x.png' />\r\n            <source media='(max-width: 425px)' srcSet='./images/foxbel-music@3.png' />\r\n            <img\r\n              className={className}\r\n              src='./images/foxbel-music.png'\r\n              alt='Foxbel Logo'\r\n            />\r\n          </>\r\n        : <>\r\n            <source media='(min-width: 1024px)' srcSet='./images/foxbel-music-white.png' />\r\n            <source media='(max-width: 768px)' srcSet='./images/foxbel-music-white@2x.png' />\r\n            <source media='(max-width: 425px)' srcSet='./images/foxbel-music-white@3.png' />\r\n            <img\r\n              className={className}\r\n              src='./images/foxbel-music-white.png'\r\n              alt='Foxbel Logo'\r\n            />\r\n          </>\r\n      }\r\n    </picture>\r\n  )\r\n}\r\n\r\nexport default Logo\r\n","import { useContext, useEffect, useRef } from 'react'\r\nimport SpotifyWebApi from 'spotify-web-api-js'\r\nimport UserContext from '../services/Context'\r\nimport Logo from './Logo'\r\n\r\nconst spotify = new SpotifyWebApi()\r\nconst limitOfTracks = 20\r\n\r\nconst NavBar = () => {\r\n  const { userContext, setUserContext } = useContext(UserContext)\r\n  const navRef = useRef(null)\r\n\r\n  // If Token exists, set music\r\n  useEffect(() => {\r\n    handleSetMusic('recents')\r\n  }, [userContext.token])\r\n\r\n  /*\r\n    Since the data from the Spotify API is supplied in different\r\n    ways depending on the query, I used a switch case to format the\r\n    information in the context for the different queries.\r\n  */\r\n\r\n  const handleSetMusic = (section, gender) => {\r\n    if (userContext.token) {\r\n      switch (section) {\r\n        case 'recents':\r\n          spotify.getMyRecentlyPlayedTracks({ limit: limitOfTracks }).then(playlist => {\r\n            setUserContext({\r\n              ...userContext,\r\n              currentSection: section,\r\n              currentData: playlist\r\n            })\r\n          })\r\n          break\r\n\r\n        case 'artists':\r\n          spotify.getMyTopArtists({ limit: limitOfTracks }).then(artist => {\r\n            setUserContext({\r\n              ...userContext,\r\n              currentSection: section,\r\n              currentData: artist\r\n            })\r\n          })\r\n          break\r\n\r\n        case 'albums':\r\n          spotify.getMySavedAlbums({ limit: limitOfTracks }).then(albums => {\r\n            setUserContext({\r\n              ...userContext,\r\n              currentSection: section,\r\n              currentData: albums\r\n            })\r\n          })\r\n          break\r\n\r\n        case 'musics':\r\n          spotify.getMyTopTracks().then(tracks => {\r\n            setUserContext({\r\n              ...userContext,\r\n              currentSection: section,\r\n              currentData: tracks\r\n            })\r\n          })\r\n          break\r\n\r\n        case 'saved':\r\n          spotify.getMySavedTracks().then(tracks => {\r\n            setUserContext({\r\n              ...userContext,\r\n              currentSection: section,\r\n              currentData: tracks\r\n            })\r\n          })\r\n          break\r\n\r\n        case 'genres':\r\n          spotify.searchAlbums(gender).then(album => {\r\n            setUserContext({\r\n              ...userContext,\r\n              currentSection: section,\r\n              currentData: album\r\n            })\r\n          })\r\n          break\r\n        default:\r\n          break\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleOpenNav = () => {\r\n    console.log('Nav Open')\r\n    navRef.current.className = 'nav open'\r\n  }\r\n  const handleCloseNav = () => {\r\n    console.log('Nav Closed')\r\n    navRef.current.className = 'nav'\r\n  }\r\n\r\n  return (\r\n    <aside className='nav' ref={navRef}>\r\n\r\n      <button className='nav_button_open' onClick={handleOpenNav}>\r\n        <i className='fas fa-bars' />\r\n      </button>\r\n\r\n      <button className='nav_button_close' onClick={handleCloseNav}>\r\n        <i className='fas fa-times' />\r\n      </button>\r\n\r\n      <Logo className='nav_logo' theme='normal' />\r\n\r\n      <article className='nav_article'>\r\n        <h2 className='nav_title'>Mi Librería</h2>\r\n        <div className='nav_button_container'>\r\n          <button className='nav_button' onClick={() => handleSetMusic('recents')}>Recientes</button>\r\n          <button className='nav_button' onClick={() => handleSetMusic('artists')}>Artistas</button>\r\n          <button className='nav_button' onClick={() => handleSetMusic('albums')}>Álbums</button>\r\n          <button className='nav_button' onClick={() => handleSetMusic('musics')}>Recomendados</button>\r\n          <button className='nav_button' onClick={() => handleSetMusic('saved')}>Guardados</button>\r\n        </div>\r\n      </article>\r\n\r\n      <article className='nav_article'>\r\n        <h2 className='nav_title'>Playlist</h2>\r\n        <div className='nav_button_container'>\r\n          <button className='nav_button' onClick={() => handleSetMusic('genres', 'metal')}>Metal</button>\r\n          <button className='nav_button' onClick={() => handleSetMusic('genres', 'dance')}>Para Bailar</button>\r\n          <button className='nav_button' onClick={() => handleSetMusic('genres', 'rock')}>Rock 90s</button>\r\n          <button className='nav_button' onClick={() => handleSetMusic('genres', 'ballad')}>Baladas</button>\r\n        </div>\r\n      </article>\r\n    </aside>\r\n  )\r\n}\r\n\r\nexport default NavBar\r\n","/* eslint-disable no-case-declarations */\r\nimport { useEffect, useContext } from 'react'\r\nimport UserContext from '../services/Context'\r\n\r\nconst VideoDetails = () => {\r\n  const { userContext, setUserContext } = useContext(UserContext)\r\n  let detailsData = {\r\n    title: '',\r\n    caption: '',\r\n    image: '',\r\n    extra: ''\r\n  }\r\n\r\n  // If there is a token, get current data\r\n  useEffect(() => {\r\n    handleGetCurrentData('recents')\r\n  }, [userContext.token])\r\n\r\n  const handleGetCurrentData = (section) => {\r\n    let data\r\n    if (userContext.currentSection) {\r\n      switch (section) {\r\n        case 'recents':\r\n          const base1 = userContext.currentData.items[0].track\r\n          data = {\r\n            title: base1.name,\r\n            caption: base1.artists[0].name,\r\n            image: base1.album.images[0].url,\r\n            extra: base1.album.release_date,\r\n            track: base1.uri\r\n          }\r\n          break\r\n\r\n        case 'artists':\r\n          const base2 = userContext.currentData.items[0]\r\n          data = {\r\n            title: base2.name,\r\n            caption: base2.genres[0],\r\n            image: base2.images[0].url,\r\n            extra: `${base2.followers.total} seguidores`,\r\n            track: base2.uri\r\n          }\r\n          break\r\n\r\n        case 'albums':\r\n          const base3 = userContext.currentData.items[0].album\r\n          data = {\r\n            title: base3.name,\r\n            caption: base3.artists[0].name,\r\n            image: base3.images[0].url,\r\n            extra: base3.release_date,\r\n            track: base3.uri\r\n          }\r\n          break\r\n\r\n        case 'musics':\r\n          const base4 = userContext.currentData.items[0]\r\n          data = {\r\n            title: base4.name,\r\n            caption: base4.artists[0].name,\r\n            image: base4.album.images[0].url,\r\n            extra: base4.album.release_date,\r\n            track: base4.uri\r\n          }\r\n          break\r\n\r\n        case 'saved':\r\n          const base5 = userContext.currentData.items[0].track\r\n          data = {\r\n            title: base5.name,\r\n            caption: base5.artists[0].name,\r\n            image: base5.album.images[0].url,\r\n            extra: base5.album.release_date,\r\n            track: base5.uri\r\n          }\r\n          break\r\n\r\n        case 'genres':\r\n          const base6 = userContext.currentData.albums.items[0]\r\n          data = {\r\n            title: base6.name,\r\n            caption: base6.artists[0].name,\r\n            image: base6.images[0].url,\r\n            extra: base6.release_date,\r\n            track: base6.uri\r\n          }\r\n          break\r\n\r\n        default:\r\n          break\r\n      }\r\n    }\r\n    return data\r\n  }\r\n\r\n  const handleSetCurrentTrack = () => {\r\n    setUserContext({\r\n      ...userContext,\r\n      currentTrack: detailsData.track\r\n    })\r\n  }\r\n\r\n  if (userContext.currentSection) detailsData = handleGetCurrentData(userContext.currentSection)\r\n\r\n  return (\r\n    <div className='details'>\r\n      <div className='details_img_container'>\r\n        <img className='details_img' src={detailsData.image} alt='' />\r\n        <button className='details_img_button' onClick={handleSetCurrentTrack}>\r\n          <i className='fas fa-play' />\r\n        </button>\r\n      </div>\r\n\r\n      <div className='details_info_container'>\r\n        <div className='details_text_container'>\r\n          <h2 className='details_title'>{detailsData.title}</h2>\r\n\r\n          <div className='details_caption_container'>\r\n            <h4 className='details_caption'>{detailsData.caption}</h4>\r\n            <span className='details_followers'>{detailsData.extra}</span>\r\n          </div>\r\n\r\n          <p className='details_description'>\r\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Quisquam, sapiente dicta!\r\n          </p>\r\n        </div>\r\n\r\n        <div className='details_buttons_container'>\r\n          <button className='details_button-play' onClick={handleSetCurrentTrack}>Reproducir</button>\r\n          <button className='details_button-follow'>Follow</button>\r\n          <button className='details_button-menu'><i className='fas fa-ellipsis-h' /></button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VideoDetails\r\n","import { useContext } from 'react'\r\nimport UserContext from '../services/Context'\r\n\r\nconst VideoItem = ({ title, caption, image, track }) => {\r\n  const { userContext, setUserContext } = useContext(UserContext)\r\n\r\n  const handleSetCurrentTrack = () => {\r\n    setUserContext({\r\n      ...userContext,\r\n      currentTrack: track\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className='item'>\r\n      <div className='item_img_container'>\r\n        <img className='item_img' src={image} alt='Album' />\r\n        <button className='item_button-play' onClick={handleSetCurrentTrack}>\r\n          <i className='fas fa-play' />\r\n        </button>\r\n        <button className='item_button-menu'>\r\n          <i className='fas fa-ellipsis-v' />\r\n        </button>\r\n      </div>\r\n      <h3 className='item_title'>{title}</h3>\r\n      <h4 className='item_caption'>{caption}</h4>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VideoItem\r\n","import { useContext } from 'react'\r\nimport UserContext from '../services/Context'\r\nimport VideoItem from './VideoItem'\r\n\r\nconst VideoContainer = () => {\r\n  const { userContext } = useContext(UserContext)\r\n  const currentSection = userContext.currentSection\r\n  const currentData = userContext.currentData\r\n\r\n  return (\r\n    <section className='container'>\r\n      <h2 className='container_title'>Resultados</h2>\r\n      <div className='container_grid'>\r\n\r\n        {/* Since the data from the Spotify API is supplied in different\r\n            ways depending on the query, I used a conditional rendering for each case */}\r\n\r\n        {\r\n          currentSection === 'recents'\r\n            ? currentData.items.map(item => (\r\n              <VideoItem\r\n                key={item?.played_at}\r\n                title={item?.track.name}\r\n                caption={item?.track.artists[0].name}\r\n                image={item?.track.album.images[0].url}\r\n                track={item?.track.uri}\r\n              />\r\n            ))\r\n            : <></>\r\n        }\r\n\r\n        {\r\n          currentSection === 'artists'\r\n            ? currentData.items.map(item => (\r\n              <VideoItem\r\n                key={item?.id}\r\n                title={item?.name}\r\n                caption={item?.genres[0]}\r\n                image={item?.images[0].url}\r\n                track={item?.uri}\r\n              />\r\n            ))\r\n            : <></>\r\n        }\r\n\r\n        {\r\n          currentSection === 'albums'\r\n            ? currentData.items.map(item => (\r\n              <VideoItem\r\n                key={item?.album.id}\r\n                title={item?.album.name}\r\n                caption={item?.album.artists[0].name}\r\n                image={item?.album.images[0].url}\r\n                track={item?.album.uri}\r\n              />\r\n            ))\r\n            : <></>\r\n        }\r\n\r\n        {\r\n          currentSection === 'musics'\r\n            ? currentData.items.map(item => (\r\n              <VideoItem\r\n                key={item?.id}\r\n                title={item?.name}\r\n                caption={item?.artists[0].name}\r\n                image={item?.album.images[0].url}\r\n                track={item?.uri}\r\n              />\r\n            ))\r\n            : <></>\r\n        }\r\n\r\n        {\r\n          currentSection === 'saved'\r\n            ? currentData.items.map(item => (\r\n              <VideoItem\r\n                key={item?.track.id}\r\n                title={item?.track.name}\r\n                caption={item?.track.artists[0].name}\r\n                image={item?.track.album.images[0].url}\r\n                track={item?.track.uri}\r\n              />\r\n            ))\r\n            : <></>\r\n        }\r\n\r\n        {\r\n          currentSection === 'genres'\r\n            ? currentData.albums.items.map(item => (\r\n              <VideoItem\r\n                key={item?.id}\r\n                title={item?.name}\r\n                caption={item?.artists[0].name}\r\n                image={item?.images[0].url}\r\n                track={item?.uri}\r\n              />\r\n            ))\r\n            : <></>\r\n        }\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default VideoContainer\r\n","import { useContext } from 'react'\r\nimport UserContext from '../services/Context'\r\n\r\nconst BrowserItem = ({ title, caption, image, track }) => {\r\n  const { userContext, setUserContext } = useContext(UserContext)\r\n\r\n  const handleSetCurrentTrack = () => {\r\n    setUserContext({\r\n      ...userContext,\r\n      currentTrack: track\r\n    })\r\n  }\r\n\r\n  return (\r\n    <button className='browser_item' onClick={handleSetCurrentTrack}>\r\n      <div className='browser_item_img_container'>\r\n        <img className='browser_item_img' src={image} alt='' />\r\n        <i className='browser_item_icon fas fa-play' />\r\n      </div>\r\n      <p className='browser_item_title'>\r\n        {title}\r\n      </p>\r\n      <h4 className='browser_item_caption'>\r\n        {caption}\r\n      </h4>\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default BrowserItem\r\n","/* eslint-disable react/jsx-indent */\r\nimport { useState, useRef } from 'react'\r\nimport SpotifyWebApi from 'spotify-web-api-js'\r\nimport BrowserItem from './BrowserItem'\r\n\r\nconst spotify = new SpotifyWebApi()\r\n\r\nconst BrowserBar = () => {\r\n  const [searchItems, setSearchItems] = useState([])\r\n  const searchRef = useRef(null)\r\n\r\n  const handleSetBrowser = (e) => {\r\n    e.stopPropagation()\r\n    const value = e.target.value\r\n\r\n    if (value) {\r\n      searchRef.current.className = 'browser_item_container'\r\n\r\n      spotify.searchTracks(value).then(res => {\r\n        const items = res.tracks.items\r\n        console.log(items)\r\n        setSearchItems(items)\r\n      })\r\n    } else {\r\n      searchRef.current.className = 'browser_item_container-hidden'\r\n    }\r\n  }\r\n\r\n  const handleOcultBrowser = () => {\r\n    setTimeout(() => {\r\n      searchRef.current.className = 'browser_item_container-hidden'\r\n    }, 500)\r\n  }\r\n\r\n  return (\r\n    <div className='browser' onBlur={handleOcultBrowser}>\r\n      <input\r\n        className='browser_input'\r\n        type='text'\r\n        placeholder='Buscar'\r\n        maxLength='40'\r\n        onChange={handleSetBrowser}\r\n      />\r\n      <span className='browser_icon'>\r\n        <i className='fas fa-search' />\r\n      </span>\r\n\r\n      {searchItems\r\n        ? <div ref={searchRef} className='browser_item_container-hidden'>\r\n          {searchItems.map(item =>\r\n            <BrowserItem\r\n              key={item.id}\r\n              title={item.name}\r\n              caption={item.artists[0].name}\r\n              image={item.album.images[1].url}\r\n              track={item.uri}\r\n            />\r\n          )}\r\n          </div>\r\n        : <></>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BrowserBar\r\n","/* eslint-disable react/jsx-closing-tag-location */\r\nimport { useContext } from 'react'\r\nimport UserContext from '../services/Context'\r\n\r\nconst User = () => {\r\n  const { userContext } = useContext(UserContext)\r\n  const user = userContext.user\r\n  return (\r\n    <div className='user'>\r\n      {\r\n        user?.images.length > 0\r\n          ? <img className='user_img' src={user.images[0].url} alt={user?.display_name} />\r\n          : <span className='user_icon'>\r\n            <i className='fas fa-user' />\r\n          </span>\r\n      }\r\n      <span className='user_username'>{user?.display_name || 'Username'}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default User\r\n","import VideoDetails from './VideoDetails'\r\nimport VideoContainer from './VideoContainer'\r\nimport BrowserBar from './BrowserBar'\r\nimport User from './User'\r\n\r\nconst MainContent = () => {\r\n  return (\r\n    <section className='main'>\r\n      <BrowserBar />\r\n      <User />\r\n      <VideoDetails />\r\n      <VideoContainer />\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default MainContent\r\n","import SpotifyPlayer from 'react-spotify-web-playback'\r\n\r\nconst Player = ({ token, tracksUri, playState }) => {\r\n  if (!token) return null\r\n  return (\r\n    <SpotifyPlayer\r\n      token={token}\r\n      uris={tracksUri || []}\r\n      play={playState}\r\n      initialVolume={0.5}\r\n      magnifySliderOnHover\r\n      styles={{\r\n        activeColor: '#fff',\r\n        bgColor: '#FF7676',\r\n        color: '#fff',\r\n        height: '60px',\r\n        loaderColor: '#fff',\r\n        sliderColor: '#1ed760',\r\n        sliderHandleColor: '#191414',\r\n        trackArtistColor: '#eee',\r\n        trackNameColor: '#fff'\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Player\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable react/jsx-indent */\r\nimport { useState, useEffect, useContext } from 'react'\r\nimport SpotifyWebApi from 'spotify-web-api-js'\r\nimport { getTokenFromURL } from '../services/GetTokenFromURL'\r\nimport UserContext from '../services/Context'\r\nimport NavBar from '../components/NavBar'\r\nimport MainContent from '../components/MainContent'\r\n// import ControlBar from '../components/ControlBar'\r\nimport SpotifyPlayer from '../components/Player'\r\n\r\nconst spotify = new SpotifyWebApi()\r\n\r\nconst Home = () => {\r\n  const [tracks, setTracks] = useState([])\r\n  const [playState, setPlayState] = useState(false)\r\n  const [firstLoad, setFirstLoad] = useState(true)\r\n  const { userContext, setUserContext } = useContext(UserContext)\r\n  const homeAnimationTime = 2000\r\n  const hash = getTokenFromURL()\r\n  const token = hash.access_token\r\n\r\n  // Check if there is a token\r\n  useEffect(() => {\r\n    if (token) {\r\n      spotify.setAccessToken(token)\r\n      spotify.getMe().then(user => {\r\n        setUserContext({\r\n          token: token,\r\n          user: user\r\n        })\r\n      })\r\n    } else {\r\n      setTimeout(() => {\r\n        window.location.href = '/Foxbel/login'\r\n      }, homeAnimationTime)\r\n    }\r\n  }, [])\r\n\r\n  // Get and send to the player an initial track\r\n  useEffect(() => {\r\n    if (firstLoad && userContext.currentData) {\r\n      getInitialTrack()\r\n      setFirstLoad(false)\r\n    }\r\n  }, [userContext.currentData])\r\n\r\n  // Obtain and send to the player each track that you want to play\r\n  useEffect(() => {\r\n    const currentTrack = userContext.currentTrack\r\n    if (currentTrack) {\r\n      setPlayState(true)\r\n      setTracks(currentTrack)\r\n    }\r\n  }, [userContext.currentTrack])\r\n\r\n  const getInitialTrack = () => {\r\n    const initialTrack = userContext.currentData.items[0].track.uri\r\n    setTracks(initialTrack)\r\n  }\r\n\r\n  return (\r\n    <main className='home'>\r\n      <NavBar />\r\n      <MainContent />\r\n      <SpotifyPlayer token={token} tracksUri={tracks} playState={playState} />\r\n      {!token\r\n        ? <div className='home_animation'>\r\n            <img className='home_animation_image' src='./images/foxbel-music-white-icon@3x.png' alt='Foxbel Icon' />\r\n          </div>\r\n        : <></>}\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import Logo from '../components/Logo'\r\nimport { loginUrl } from '../services/GetTokenFromURL'\r\n\r\nconst Login = () => {\r\n  return (\r\n    <main className='login'>\r\n      <div className='login_card'>\r\n        <Logo className='login_logo' theme='white' />\r\n        <h2 className='login_text'>Por favor, Inicie Sesión</h2>\r\n        <a className='login_button' href={loginUrl}>Con Spotify <i className='fab fa-spotify' /></a>\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport { UserContext } from '../services/Context'\r\nimport Home from '../pages/Home'\r\nimport Login from '../pages/Login'\r\n\r\nconst Routes = () => {\r\n  //  Fix assets uri problems\r\n  const path = window.location.origin\r\n  let basename\r\n  path === 'http://localhost:3000' ? basename = '' : basename = '/Foxbel'\r\n\r\n  return (\r\n    <UserContext>\r\n      <Router basename={basename}>\r\n        <Switch>\r\n          <Route exact path='/' component={Home} />\r\n          <Route exact path='/login' component={Login} />\r\n        </Switch>\r\n      </Router>\r\n    </UserContext>\r\n  )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport Routes from './routes/routes'\r\nimport './scss/index.scss'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Routes />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}